{"ast":null,"code":"var _jsxFileName = \"/Users/pauline/Documents/game_of_life/gameoflife/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Box extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.selectBox = () => {\n      this.props.selectBox(this.props.row, this.props.col);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.boxClass,\n      id: this.props.boxId,\n      onClick: this.selectBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass Grid extends React.Component {\n  render() {\n    const width = this.props.cols * 16;\n    var rowsArr = [];\n    var boxClass = \"\";\n\n    for (var i = 0; i < this.props.rows; i++) {\n      for (var j = 0; j < this.props.rows; j++) {\n        let boxId = i + \"_\" + j;\n        boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box false\";\n        rowsArr.push(React.createElement(Box, {\n          boxClass: boxClass,\n          key: boxId,\n          boxId: boxId,\n          rows: i,\n          cols: j,\n          selectBox: this.props.selectBox,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }));\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"grid\",\n      style: {\n        width: width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, rowsArr);\n  }\n\n}\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n\n    this.selectBox = (row, col) => {\n      let gridCopy = arrayClone(this.state.gridFull);\n      gridCopy[row][col] = !gridCopy[row][col];\n    };\n\n    this.speed = 100;\n    this.rows = 40;\n    this.cols = 50;\n    this.state = {\n      generation: 0,\n      gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"The Game of Life\"), React.createElement(Grid, {\n      gridFull: this.state.gridFull,\n      rows: this.rows,\n      cols: this.cols,\n      selectBox: this.selectBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Generations : \", this.state.generation));\n  }\n\n}\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(React.createElement(Main, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/pauline/Documents/game_of_life/gameoflife/src/index.js"],"names":["React","ReactDOM","Box","Component","selectBox","props","row","col","render","boxClass","boxId","Grid","width","cols","rowsArr","i","rows","j","gridFull","push","Main","constructor","gridCopy","arrayClone","state","speed","generation","Array","fill","map","arr","JSON","parse","stringify","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Box extends React.Component {\n    selectBox = () => {\n        this.props.selectBox(this.props.row, this.props.col);\n    }\n    render () {\n        return (\n            <div\n                className={this.props.boxClass}\n                id={this.props.boxId}\n                onClick={this.selectBox}\n            />\n        )\n    }\n}\nclass Grid extends React.Component {\n    render () {\n        const width = this.props.cols * 16;\n        var rowsArr = [];\n        var boxClass = \"\";\n\n        for (var i = 0; i < this.props.rows; i++) {\n            for (var j = 0; j < this.props.rows; j++) {\n                let boxId = i + \"_\" + j;\n                boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box false\";\n                rowsArr.push(\n                    <Box\n                        boxClass={boxClass}\n                        key={boxId}\n                        boxId={boxId}\n                        rows={i}\n                        cols={j}\n                        selectBox={this.props.selectBox}\n                    />\n                )\n            }\n        }\n\n        return (\n            <div className=\"grid\" style={{width: width}}>\n                {rowsArr}\n            </div>\n        )\n    }\n}\n\nclass Main extends React.Component {\n    constructor () {\n        super();\n        this.speed = 100;\n        this.rows = 40;\n        this.cols = 50;\n        this.state = {\n            generation: 0,\n            gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false)),\n        }\n    }\n\n    selectBox = (row, col) => {\n        let gridCopy =  arrayClone(this.state.gridFull);\n        gridCopy[row][col] = !gridCopy[row][col];\n    }\n\n    render () {\n        return (\n            <div>\n                <h1>The Game of Life</h1>\n                <Grid \n                    gridFull={this.state.gridFull}\n                    rows={this.rows}\n                    cols={this.cols}\n                    selectBox={this.selectBox}\n                />\n                <h2>Generations : {this.state.generation}</h2>\n            </div>\n        )\n    }\n}\n\nfunction arrayClone(arr) {\n    return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n  "]},"metadata":{},"sourceType":"module"}