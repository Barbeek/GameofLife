{"ast":null,"code":"var _jsxFileName = \"/Users/pauline/Documents/game_of_life/gameoflife/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ButtonToolbar, MenuItem, DropdownButton, Button } from 'react-bootstrap';\n\nclass Box extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.selectBox = () => {\n      this.props.selectBox(this.props.rows, this.props.cols);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.boxClass,\n      id: this.props.boxId,\n      onClick: this.selectBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass Grid extends React.Component {\n  render() {\n    const width = this.props.cols * 16;\n    var rowsArr = [];\n    var boxClass = \"\";\n\n    for (var i = 0; i < this.props.rows; i++) {\n      for (var j = 0; j < this.props.rows; j++) {\n        let boxId = i + \"_\" + j;\n        boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box false\";\n        rowsArr.push(React.createElement(Box, {\n          boxClass: boxClass,\n          key: boxId,\n          boxId: boxId,\n          rows: i,\n          cols: j,\n          selectBox: this.props.selectBox,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }));\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"grid\",\n      style: {\n        width: width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, rowsArr);\n  }\n\n}\n\nclass Buttons extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-default\",\n      onClick: this.props.playButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Play\"), React.createElement(\"button\", {\n      className: \"btn btn-default\",\n      onClick: this.props.playButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Pause\"), React.createElement(\"button\", {\n      className: \"btn btn-default\",\n      onClick: this.props.playButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"button\", {\n      className: \"btn btn-default\",\n      onClick: this.props.playButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Slow\"), React.createElement(\"button\", {\n      className: \"btn btn-default\",\n      onClick: this.props.playButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Fast\"), React.createElement(\"button\", {\n      className: \"btn btn-default\",\n      onClick: this.props.playButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Seed\")));\n  }\n\n}\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n\n    this.selectBox = (row, col) => {\n      let gridCopy = arrayClone(this.state.gridFull);\n      gridCopy[row][col] = !gridCopy[row][col];\n      this.setState({\n        gridFull: gridCopy\n      });\n    };\n\n    this.seed = () => {\n      let gridCopy = arrayClone(this.state.gridFull);\n\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.cols; j++) {\n          if (Math.floor(Math.random() * 4) === 1) {\n            gridCopy[i][j] = true;\n          }\n        }\n      }\n\n      this.setState({\n        gridFull: gridCopy\n      });\n    };\n\n    this.playButton = () => {\n      clearInterval(this.intervalId);\n      this.intervalId = setInterval(this.play, this.speed);\n    };\n\n    this.pauseButton = () => {\n      clearInterval(this.intervalId);\n    };\n\n    this.play = () => {\n      let g = this.state.gridFull;\n      let g2 = arrayClone(this.state.gridFull);\n\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.cols; j++) {\n          let count = 0;\n          if (i > 0) if (g[i - 1][j]) count++;\n          if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n          if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n          if (j < this.cols - 1) if (g[i][j + 1]) count++;\n          if (j > 0) if (g[i][j - 1]) count++;\n          if (i < this.rows - 1) if (g[i + 1][j]) count++;\n          if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n          if (i < this.rows - 1 && j < this.cols - 1) if (g[i + 1][j + 1]) count++;\n          if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n          if (!g[i][j] && count === 3) g2[i][j] = true;\n        }\n      }\n\n      this.setState({\n        gridFull: g2,\n        generation: this.state.generation + 1\n      });\n    };\n\n    this.speed = 80;\n    this.rows = 40;\n    this.cols = 50;\n    this.state = {\n      generation: 0,\n      gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n    };\n  }\n\n  componentDidMount() {\n    this.seed();\n    this.playButton();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"The Game of Life\"), React.createElement(Buttons, {\n      playButton: this.playButton,\n      pauseButton: this.pauseButton,\n      slow: this.slow,\n      fast: this.fast,\n      clear: this.clear,\n      seed: this.seed,\n      gridSize: this.gridSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      gridFull: this.state.gridFull,\n      rows: this.rows,\n      cols: this.cols,\n      selectBox: this.selectBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Generations : \", this.state.generation));\n  }\n\n}\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(React.createElement(Main, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 184\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/pauline/Documents/game_of_life/gameoflife/src/index.js"],"names":["React","ReactDOM","ButtonToolbar","MenuItem","DropdownButton","Button","Box","Component","selectBox","props","rows","cols","render","boxClass","boxId","Grid","width","rowsArr","i","j","gridFull","push","Buttons","playButton","Main","constructor","row","col","gridCopy","arrayClone","state","setState","seed","Math","floor","random","clearInterval","intervalId","setInterval","play","speed","pauseButton","g","g2","count","generation","Array","fill","map","componentDidMount","slow","fast","clear","gridSize","arr","JSON","parse","stringify","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ButtonToolbar, MenuItem, DropdownButton, Button } from 'react-bootstrap';\n\nclass Box extends React.Component {\n    selectBox = () => {\n        this.props.selectBox(this.props.rows, this.props.cols);\n    }\n    render () {\n        return (\n            <div\n                className={this.props.boxClass}\n                id={this.props.boxId}\n                onClick={this.selectBox}\n            />\n        )\n    }\n}\nclass Grid extends React.Component {\n    render () {\n        const width = this.props.cols * 16;\n        var rowsArr = [];\n        var boxClass = \"\";\n\n        for (var i = 0; i < this.props.rows; i++) {\n            for (var j = 0; j < this.props.rows; j++) {\n                let boxId = i + \"_\" + j;\n                boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box false\";\n                rowsArr.push(\n                    <Box\n                        boxClass={boxClass}\n                        key={boxId}\n                        boxId={boxId}\n                        rows={i}\n                        cols={j}\n                        selectBox={this.props.selectBox}\n                    />\n                )\n            }\n        }\n\n        return (\n            <div className=\"grid\" style={{width: width}}>\n                {rowsArr}\n            </div>\n        )\n    }\n}\n\nclass Buttons extends React.Component {\n    render() {\n        return (\n            <div className=\"center\">\n                <ButtonToolbar>\n                    <button className=\"btn btn-default\" onClick={this.props.playButton}>\n                        Play\n                    </button>\n                    <button className=\"btn btn-default\" onClick={this.props.playButton}>\n                        Pause\n                    </button>\n                    <button className=\"btn btn-default\" onClick={this.props.playButton}>\n                        Clear\n                    </button>\n                    <button className=\"btn btn-default\" onClick={this.props.playButton}>\n                        Slow\n                    </button>\n                    <button className=\"btn btn-default\" onClick={this.props.playButton}>\n                        Fast\n                    </button>\n                    <button className=\"btn btn-default\" onClick={this.props.playButton}>\n                        Seed\n                    </button>\n                </ButtonToolbar>\n            </div>\n        )\n    }\n}\n\nclass Main extends React.Component {\n    constructor () {\n        super();\n        this.speed = 80;\n        this.rows = 40;\n        this.cols = 50;\n        this.state = {\n            generation: 0,\n            gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false)),\n        }\n    }\n\n    selectBox = (row, col) => {\n        let gridCopy =  arrayClone(this.state.gridFull);\n        gridCopy[row][col] = !gridCopy[row][col];\n        this.setState({\n            gridFull: gridCopy\n        })\n    }\n\n    seed = () => {\n        let gridCopy =  arrayClone(this.state.gridFull);\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.cols; j++) {\n                if (Math.floor(Math.random() * 4) === 1) {\n                    gridCopy[i][j] = true;\n                }\n\n            }\n        }\n        this.setState({\n            gridFull: gridCopy\n        })\n    }\n\n    playButton = () => {\n        clearInterval(this.intervalId);\n        this.intervalId = setInterval(this.play, this.speed);\n    }\n\n    pauseButton = () => {\n        clearInterval(this.intervalId);\n    }\n\n    play = () => {\n\t\tlet g = this.state.gridFull;\n\t\tlet g2 = arrayClone(this.state.gridFull);\n\n\t\tfor (let i = 0; i < this.rows; i++) {\n\t\t  for (let j = 0; j < this.cols; j++) {\n\t\t    let count = 0;\n\t\t    if (i > 0) if (g[i - 1][j]) count++;\n\t\t    if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n\t\t    if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n\t\t    if (j < this.cols - 1) if (g[i][j + 1]) count++;\n\t\t    if (j > 0) if (g[i][j - 1]) count++;\n\t\t    if (i < this.rows - 1) if (g[i + 1][j]) count++;\n\t\t    if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n\t\t    if (i < this.rows - 1 && j < this.cols - 1) if (g[i + 1][j + 1]) count++;\n\t\t    if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n\t\t    if (!g[i][j] && count === 3) g2[i][j] = true;\n\t\t  }\n\t\t}\n\t\tthis.setState({\n\t\t  gridFull: g2,\n\t\t  generation: this.state.generation + 1\n\t\t});\n\n\t}\n\n    componentDidMount() {\n        this.seed();\n        this.playButton();\n    }\n\n    render () {\n        return (\n            <div>\n                <h1>The Game of Life</h1>\n                <Buttons\n                    playButton={this.playButton}\n                    pauseButton={this.pauseButton}\n                    slow={this.slow}\n                    fast={this.fast}\n                    clear={this.clear}\n                    seed={this.seed}\n                    gridSize={this.gridSize}\n                />\n                <Grid \n                    gridFull={this.state.gridFull}\n                    rows={this.rows}\n                    cols={this.cols}\n                    selectBox={this.selectBox}\n                />\n                <h2>Generations : {this.state.generation}</h2>\n            </div>\n        )\n    }\n}\n\nfunction arrayClone(arr) {\n    return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n  "]},"metadata":{},"sourceType":"module"}